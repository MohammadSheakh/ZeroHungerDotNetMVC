@model E_Commerce_Web_Application.DTOs.SellerDTO


@{

    if (ViewData.ContainsKey("Seller") && ViewData["Seller"] != null)
    {
        var model1 = ViewData["Seller"] as E_Commerce_Web_Application.DTOs.SellerDTO; //E_Commerce_Web_Application.EF.Seller
        if (model1 != null)
        {


            <h1>Model not null</h1>
        }
        else
        {
            <h1>Model is null</h1>
        }
    }
    else
    {
        <h1>Seller is null From _SellerProfileDetails.cshtml</h1>
    }


}

@*@(model1.ToString() ==null ? "":model1.ToString())*@

    <input type="text" name="name" id="name" value="" placeholder="name" />


@*<div>

        @using (Html.BeginForm("CreateSellerAccount", "Seller", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>SellerDTO</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })

                        <input type="text" name="name" id="name" value="@(model1.ToString() ==null ? "":model1.ToString())" placeholder="name" />

                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.emailAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emailAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        <input type="password" name="password" value="@(Model==null ? "":Model.password)" />

                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.phoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.phoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.phoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">


                        <input type="file" name="image" value="" />


                        @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.shopName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.shopName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.shopName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.shopDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.shopDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.shopDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.shopLogo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="shopLogo" value="" />

                        @Html.ValidationMessageFor(model => model.shopLogo, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <span class="control-label col-md-2">Status</span>
                    <div class="col-md-10">
                        <select class="form-control" name="StatusId">
                            <option disabled selected>---Select---</option>

                            <option>Local Seller</option>
                            <option></option>
                            <option disabled>Active Seller</option>
                            <option disabled>Inactive Seller</option>
                            <option disabled>Suspended Seller</option>
                            <option disabled>Verified Seller</option>

                            <option disabled>Premium Support Seller</option>
                            <option disabled>Best Seller</option>
                            <option disabled>Top Seller</option>
                        </select>
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.offlineShopAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.offlineShopAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.offlineShopAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.googleMapLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.googleMapLocation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.googleMapLocation, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to Login Form", "sellerLogin")
        </div>
    </div>*@

